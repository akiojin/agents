<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="325" failures="76" errors="0" time="29.064193389">
    <testsuite name="src/gemini.test.tsx" timestamp="2025-08-12T09:26:45.221Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/gemini.test.tsx" name="src/gemini.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/nonInteractiveCli.test.ts" timestamp="2025-08-12T09:26:45.222Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/nonInteractiveCli.test.ts" name="src/nonInteractiveCli.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/nonInteractiveCli.ts:7:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/config/auth.test.ts" timestamp="2025-08-12T09:26:45.224Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/config/auth.test.ts" name="src/config/auth.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.integration.test.ts" timestamp="2025-08-12T09:26:45.225Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/config/config.integration.test.ts" name="src/config/config.integration.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/config/config.integration.test.ts:11:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.test.ts" timestamp="2025-08-12T09:26:45.226Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/config/config.test.ts" name="src/config/config.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/config/config.ts:12:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/config/extension.test.ts" timestamp="2025-08-12T09:26:45.227Z" hostname="63accec1df8b" tests="7" failures="1" errors="0" skipped="0" time="0.017820333">
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path when GEMINI.md is present" time="0.015044166">
            <system-out>
Loading extension: ext1 (version: 1.0.0)
Loading extension: ext2 (version: 2.0.0)

            </system-out>
            <failure message="expected [] to deeply equal [ Array(1) ]" type="AssertionError">
AssertionError: expected [] to deeply equal [ Array(1) ]

- Expected
+ Received

- [
-   &quot;/tmp/gemini-cli-test-workspace-LBwlHy/.gemini/extensions/ext1/GEMINI.md&quot;,
- ]
+ []

 ❯ src/config/extension.test.ts:59:32
            </failure>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path from the extension config" time="0.000988834">
            <system-out>
Loading extension: ext1 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return all extensions if no enabled extensions are provided" time="0.000147208">
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return only the enabled extensions" time="0.000268291">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Activated extension: ext3 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return no extensions when &quot;none&quot; is provided" time="0.000123708">
            <system-out>
All extensions are disabled.

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should handle case-insensitivity" time="0.000157083">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Disabled extension: ext3

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should log an error for unknown extensions" time="0.000321166">
        </testcase>
    </testsuite>
    <testsuite name="src/config/settings.test.ts" timestamp="2025-08-12T09:26:45.231Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/config/settings.test.ts" name="src/config/settings.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/config/settings.test.ts:46:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/services/CommandService.test.ts" timestamp="2025-08-12T09:26:45.232Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/services/CommandService.test.ts" name="src/services/CommandService.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/test-utils/mockCommandContext.test.ts" timestamp="2025-08-12T09:26:45.233Z" hostname="63accec1df8b" tests="3" failures="0" errors="0" skipped="0" time="0.002913334">
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should return a valid CommandContext object with default mocks" time="0.001486708">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply top-level overrides correctly" time="0.000457">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply deeply nested overrides correctly" time="0.000225708">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/App.test.tsx" timestamp="2025-08-12T09:26:45.234Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/App.test.tsx" name="src/ui/App.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useEditorSettings.ts:10:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/utils/startupWarnings.test.ts" timestamp="2025-08-12T09:26:45.235Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/utils/startupWarnings.test.ts" name="src/utils/startupWarnings.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/utils/startupWarnings.ts:10:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/utils/userStartupWarnings.test.ts" timestamp="2025-08-12T09:26:45.237Z" hostname="63accec1df8b" tests="3" failures="0" errors="0" skipped="0" time="0.002286625">
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should return a warning when running in home directory" time="0.001200417">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should not return a warning when running in a project directory" time="0.000147541">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should handle errors when checking directory" time="0.000191667">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/aboutCommand.test.ts" timestamp="2025-08-12T09:26:45.238Z" hostname="63accec1df8b" tests="4" failures="0" errors="0" skipped="0" time="0.004978833">
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should have the correct name and description" time="0.001367042">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should call addItem with all version info" time="0.00187625">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should show the correct sandbox environment variable" time="0.000694209">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should show sandbox-exec profile when applicable" time="0.000319959">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/authCommand.test.ts" timestamp="2025-08-12T09:26:45.239Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.002914875">
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should return a dialog action to open the auth dialog" time="0.001846792">
        </testcase>
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should have the correct name and description" time="0.000283">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/bugCommand.test.ts" timestamp="2025-08-12T09:26:45.240Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.003292833">
        <testcase classname="src/ui/commands/bugCommand.test.ts" name="bugCommand &gt; should generate the default GitHub issue URL" time="0.00220575">
        </testcase>
        <testcase classname="src/ui/commands/bugCommand.test.ts" name="bugCommand &gt; should use a custom URL template from config if provided" time="0.000345833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/chatCommand.test.ts" timestamp="2025-08-12T09:26:45.240Z" hostname="63accec1df8b" tests="11" failures="0" errors="0" skipped="0" time="0.00678875">
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; should have the correct main command definition" time="0.001672">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; list subcommand &gt; should inform when no checkpoints are found" time="0.000784209">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; list subcommand &gt; should list found checkpoints" time="0.000475875">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should return an error if tag is missing" time="0.000318291">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should inform if conversation history is empty" time="0.000272375">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should save the conversation" time="0.000706041">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should return an error if tag is missing" time="0.000320333">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should inform if checkpoint is not found" time="0.0003405">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should resume a conversation" time="0.00035825">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; completion &gt; should provide completion suggestions" time="0.000384667">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; completion &gt; should suggest filenames sorted by modified time (newest first)" time="0.000377125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/clearCommand.test.ts" timestamp="2025-08-12T09:26:45.243Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.0033695">
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should set debug message, reset chat, and clear UI when config is available" time="0.002266625">
        </testcase>
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should not attempt to reset chat if config service is not available" time="0.000413875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/compressCommand.test.ts" timestamp="2025-08-12T09:26:45.244Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="src/ui/commands/compressCommand.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/docsCommand.test.ts" timestamp="2025-08-12T09:26:45.245Z" hostname="63accec1df8b" tests="3" failures="0" errors="0" skipped="0" time="0.003886792">
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should add an info message and call &apos;open&apos; in a non-sandbox environment" time="0.002512834">
        </testcase>
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should only add an info message in a sandbox environment" time="0.000399458">
        </testcase>
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should not open browser for &apos;sandbox-exec&apos;" time="0.000243958">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/editorCommand.test.ts" timestamp="2025-08-12T09:26:45.246Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.002602625">
        <testcase classname="src/ui/commands/editorCommand.test.ts" name="editorCommand &gt; should return a dialog action to open the editor dialog" time="0.001719541">
        </testcase>
        <testcase classname="src/ui/commands/editorCommand.test.ts" name="editorCommand &gt; should have the correct name and description" time="0.000143875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/extensionsCommand.test.ts" timestamp="2025-08-12T09:26:45.247Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.004065333">
        <testcase classname="src/ui/commands/extensionsCommand.test.ts" name="extensionsCommand &gt; should display &quot;No active extensions.&quot; when none are found" time="0.002945875">
        </testcase>
        <testcase classname="src/ui/commands/extensionsCommand.test.ts" name="extensionsCommand &gt; should list active extensions when they are found" time="0.000354917">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/helpCommand.test.ts" timestamp="2025-08-12T09:26:45.248Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.002930625">
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should return a dialog action and log a debug message for &apos;/help&apos;" time="0.002093834">
        </testcase>
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should also be triggered by its alternative name &apos;?&apos;" time="0.000117125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/ideCommand.test.ts" timestamp="2025-08-12T09:26:45.248Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/ideCommand.test.ts" name="src/ui/commands/ideCommand.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/ideCommand.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/ideCommand.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/cli/src/ui/commands/ideCommand.test.ts:14:0
  12 |  const __vi_import_1__ = await import(&quot;child_process&quot;);
  13 |  const __vi_import_2__ = await import(&quot;glob&quot;);
  14 |  const __vi_import_3__ = await import(&quot;@google/gemini-cli-core&quot;);
     |                                       ^
  15 |  /**
  16 |   * @license
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/mcpCommand.test.ts" timestamp="2025-08-12T09:26:45.249Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/mcpCommand.test.ts" name="src/ui/commands/mcpCommand.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/mcpCommand.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/mcpCommand.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/cli/src/ui/commands/mcpCommand.test.ts:10:0
  12 |  const __vi_import_0__ = await import(&quot;./mcpCommand.js&quot;);
  13 |  const __vi_import_1__ = await import(&quot;../../test-utils/mockCommandContext.js&quot;);
  14 |  const __vi_import_2__ = await import(&quot;@google/gemini-cli-core&quot;);
     |                                       ^
  15 |  const __vi_import_3__ = await import(&quot;open&quot;);
  16 |  const __vi_import_4__ = await import(&quot;@google/genai&quot;);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/memoryCommand.test.ts" timestamp="2025-08-12T09:26:45.250Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="src/ui/commands/memoryCommand.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/commands/memoryCommand.ts:7:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/privacyCommand.test.ts" timestamp="2025-08-12T09:26:45.251Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.002906375">
        <testcase classname="src/ui/commands/privacyCommand.test.ts" name="privacyCommand &gt; should return a dialog action to open the privacy dialog" time="0.00183275">
        </testcase>
        <testcase classname="src/ui/commands/privacyCommand.test.ts" name="privacyCommand &gt; should have the correct name and description" time="0.00023575">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/quitCommand.test.ts" timestamp="2025-08-12T09:26:45.252Z" hostname="63accec1df8b" tests="1" failures="0" errors="0" skipped="0" time="0.00394525">
        <testcase classname="src/ui/commands/quitCommand.test.ts" name="quitCommand &gt; returns a QuitActionReturn object with the correct messages" time="0.00314">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/statsCommand.test.ts" timestamp="2025-08-12T09:26:45.253Z" hostname="63accec1df8b" tests="3" failures="0" errors="0" skipped="0" time="0.005039542">
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display general session stats when run with no subcommand" time="0.003791334">
        </testcase>
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display model stats when using the &quot;model&quot; subcommand" time="0.000314333">
        </testcase>
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display tool stats when using the &quot;tools&quot; subcommand" time="0.000202042">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/synapticCommand.test.ts" timestamp="2025-08-12T09:26:45.254Z" hostname="63accec1df8b" tests="17" failures="17" errors="0" skipped="0" time="0.039023791">
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 引数なしでダッシュボードを表示すること" time="0.01129975">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:45:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; helpコマンドでヘルプメッセージを表示すること" time="0.0065145">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:57:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; --helpフラグでヘルプメッセージを表示すること" time="0.005782583">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:66:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; -hフラグでヘルプメッセージを表示すること" time="0.000576333">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:73:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; statusコマンドでシステム状態を表示すること" time="0.000579833">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:109:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; searchコマンドでメモリ検索を実行すること" time="0.001666917">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:143:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索クエリなしでsearchコマンドを実行した場合エラーになること" time="0.000257125">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:153:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; activateコマンドでメモリ活性化を実行すること" time="0.000310583">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:179:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; メモリIDなしでactivateコマンドを実行した場合エラーになること" time="0.000183417">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:188:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 存在しないサブコマンドでエラーになること" time="0.000182584">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:195:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; ダッシュボード表示エラーをハンドリングすること" time="0.000190875">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:204:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; status取得エラーをハンドリングすること" time="0.000236">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:221:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索エラーをハンドリングすること" time="0.000228791">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:236:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 活性化エラーをハンドリングすること" time="0.001123541">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:253:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索結果が空の場合の処理" time="0.0002945">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:268:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 活性化結果が空の場合の処理" time="0.000229042">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:285:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 複雑な検索クエリを正しく解析すること" time="0.006492542">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;複雑な検索クエリ&apos;, 10 ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;複雑な検索クエリ&apos;, 10 ]

Number of calls: 0

 ❯ src/ui/commands/synapticCommand.test.ts:301:34
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/themeCommand.test.ts" timestamp="2025-08-12T09:26:45.265Z" hostname="63accec1df8b" tests="2" failures="0" errors="0" skipped="0" time="0.003102709">
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should return a dialog action to open the theme dialog" time="0.002085416">
        </testcase>
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should have the correct name and description" time="0.000274875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/toolsCommand.test.ts" timestamp="2025-08-12T09:26:45.265Z" hostname="63accec1df8b" tests="4" failures="0" errors="0" skipped="0" time="0.004873583">
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should display an error if the tool registry is unavailable" time="0.002955125">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should display &quot;No tools available&quot; when none are found" time="0.000642709">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should list tools without descriptions by default" time="0.000356583">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should list tools with descriptions when &quot;desc&quot; arg is passed" time="0.00020175">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AuthDialog.test.tsx" timestamp="2025-08-12T09:26:45.267Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="src/ui/components/AuthDialog.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/HistoryItemDisplay.test.tsx" timestamp="2025-08-12T09:26:45.268Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="src/ui/components/HistoryItemDisplay.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/InputPrompt.test.tsx" timestamp="2025-08-12T09:26:45.269Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="src/ui/components/InputPrompt.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/LoadingIndicator.test.tsx" timestamp="2025-08-12T09:26:45.270Z" hostname="63accec1df8b" tests="11" failures="0" errors="0" skipped="0" time="0.027417125">
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should not render when streamingState is Idle" time="0.008463375">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner, phrase, and time when streamingState is Responding" time="0.005260083">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner (static), phrase but no time/cancel when streamingState is WaitingForConfirmation" time="0.001819166">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the currentLoadingPhrase correctly" time="0.001031625">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly when Responding" time="0.001095875">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly in human-readable format" time="0.001106708">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render rightContent when provided" time="0.001045792">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should transition correctly between states using rerender" time="0.003208541">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display fallback phrase if thought is empty" time="0.001125375">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the subject of a thought" time="0.00137875">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should prioritize thought.subject over currentLoadingPhrase" time="0.001152792">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ModelStatsDisplay.test.tsx" timestamp="2025-08-12T09:26:45.273Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="src/ui/components/ModelStatsDisplay.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/components/ModelStatsDisplay.tsx:16:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/SessionSummaryDisplay.test.tsx" timestamp="2025-08-12T09:26:45.274Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/SessionSummaryDisplay.test.tsx" name="src/ui/components/SessionSummaryDisplay.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/components/StatsDisplay.tsx:12:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/StatsDisplay.test.tsx" timestamp="2025-08-12T09:26:45.275Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="src/ui/components/StatsDisplay.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/components/StatsDisplay.tsx:12:1

Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/SynapticMemoryDashboard.test.tsx" timestamp="2025-08-12T09:26:45.276Z" hostname="63accec1df8b" tests="12" failures="12" errors="0" skipped="0" time="11.196771672">
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; 正常にレンダリングされること" time="0.0531025">
            <failure message="Unable to find an element with the text: Synaptic Memory Dashboard. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Synaptic Memory Dashboard. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:89:19
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Memoriesタブでメモリ一覧が表示されること" time="0.0114305">
            <failure message="Unable to find an element with the text: Total: 2. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Total: 2. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:102:19
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Synapsesタブでシナプス接続が表示されること" time="0.010244875">
            <failure message="Unable to find an element with the text: Synapses. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Synapses. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:113:28
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Healthタブでネットワーク健康状態が表示されること" time="0.010649333">
            <failure message="Unable to find an element with the text: Health. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Health. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:126:28
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Healthタブで問題と提案が表示されること" time="0.011320875">
            <failure message="Unable to find an element with the text: Health. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Health. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:140:28
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Configタブで設定が表示されること" time="0.018871458">
            <failure message="Unable to find an element with the text: Config. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Config. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:154:28
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; Escキーでダッシュボードが閉じられること" time="8.019468546">
            <failure message="expected &quot;spy&quot; to be called at least once

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mシナプス記憶システム ダッシュボード[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m1[0m
              [0m] [0m
              [0m記憶一覧[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m2[0m
              [0m] [0m
              [0mシナプス結合[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m3[0m
              [0m] [0m
              [0mネットワーク診断[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m4[0m
              [0m] [0m
              [0m設定[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m記憶一覧 ([0m
                [0m3[0m
                [0m件)[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m► [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mGPT-5プロンプトガイドの分析結果[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-002[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mシナプス記憶システムのPhase 2実装完了[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-003[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mRESTful API設計とエンドポイント定義[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m詳細:[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mID: [0m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mアクセス数: [0m
                  [0m15[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m成功率: [0m
                  [0m92.0[0m
                  [0m%[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mタグ: [0m
                  [0mgpt5, prompting, analysis[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            シナプス記憶システム ダッシュボード
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              1
              ] 
              記憶一覧
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              2
              ] 
              シナプス結合
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              3
              ] 
              ネットワーク診断
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              4
              ] 
              設定
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                記憶一覧 (
                3
                件)
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ► 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  GPT-5プロンプトガイドの分析結果
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-002
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  シナプス記憶システムのPhase 2実装完了
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-003
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  RESTful API設計とエンドポイント定義
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  詳細:
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ID: 
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  アクセス数: 
                  15
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  成功率: 
                  92.0
                  %
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  タグ: 
                  gpt5, prompting, analysis
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:171:33
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; qキーでダッシュボードが閉じられること" time="1.014326126">
            <failure message="expected &quot;spy&quot; to be called at least once

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mシナプス記憶システム ダッシュボード[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m1[0m
              [0m] [0m
              [0m記憶一覧[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m2[0m
              [0m] [0m
              [0mシナプス結合[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m3[0m
              [0m] [0m
              [0mネットワーク診断[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m4[0m
              [0m] [0m
              [0m設定[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m記憶一覧 ([0m
                [0m3[0m
                [0m件)[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m► [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mGPT-5プロンプトガイドの分析結果[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-002[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mシナプス記憶システムのPhase 2実装完了[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-003[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mRESTful API設計とエンドポイント定義[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m詳細:[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mID: [0m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mアクセス数: [0m
                  [0m15[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m成功率: [0m
                  [0m92.0[0m
                  [0m%[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mタグ: [0m
                  [0mgpt5, prompting, analysis[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            シナプス記憶システム ダッシュボード
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              1
              ] 
              記憶一覧
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              2
              ] 
              シナプス結合
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              3
              ] 
              ネットワーク診断
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              4
              ] 
              設定
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                記憶一覧 (
                3
                件)
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ► 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  GPT-5プロンプトガイドの分析結果
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-002
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  シナプス記憶システムのPhase 2実装完了
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-003
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  RESTful API設計とエンドポイント定義
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  詳細:
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ID: 
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  アクセス数: 
                  15
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  成功率: 
                  92.0
                  %
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  タグ: 
                  gpt5, prompting, analysis
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:182:33
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; ターミナルサイズに応じてレイアウトが調整されること" time="0.0109655">
            <failure message="Unable to find an element with the text: Synaptic Memory Dashboard. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Synaptic Memory Dashboard. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:196:19
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; エラー状態が正しく表示されること" time="1.014469542">
            <failure message="Unable to find an element with the text: /Error:/. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mシナプス記憶システム ダッシュボード[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m1[0m
              [0m] [0m
              [0m記憶一覧[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m2[0m
              [0m] [0m
              [0mシナプス結合[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m3[0m
              [0m] [0m
              [0mネットワーク診断[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m4[0m
              [0m] [0m
              [0m設定[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m記憶一覧 ([0m
                [0m3[0m
                [0m件)[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m► [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mGPT-5プロンプトガイドの分析結果[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-002[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mシナプス記憶システムのPhase 2実装完了[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-003[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mRESTful API設計とエンドポイント定義[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m詳細:[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mID: [0m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mアクセス数: [0m
                  [0m15[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m成功率: [0m
                  [0m92.0[0m
                  [0m%[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mタグ: [0m
                  [0mgpt5, prompting, analysis[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: /Error:/. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            シナプス記憶システム ダッシュボード
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              1
              ] 
              記憶一覧
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              2
              ] 
              シナプス結合
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              3
              ] 
              ネットワーク診断
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              4
              ] 
              設定
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                記憶一覧 (
                3
                件)
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ► 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  GPT-5プロンプトガイドの分析結果
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-002
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  シナプス記憶システムのPhase 2実装完了
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-003
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  RESTful API設計とエンドポイント定義
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  詳細:
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ID: 
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  アクセス数: 
                  15
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  成功率: 
                  92.0
                  %
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  タグ: 
                  gpt5, prompting, analysis
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
 ❯ Proxy.waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:218:11
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; ローディング状態が正しく表示されること" time="1.012600917">
            <failure message="Unable to find an element with the text: Loading.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mシナプス記憶システム ダッシュボード[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m1[0m
              [0m] [0m
              [0m記憶一覧[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m2[0m
              [0m] [0m
              [0mシナプス結合[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m3[0m
              [0m] [0m
              [0mネットワーク診断[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m[[0m
              [0m4[0m
              [0m] [0m
              [0m設定[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m記憶一覧 ([0m
                [0m3[0m
                [0m件)[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m► [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mGPT-5プロンプトガイドの分析結果[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-002[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mシナプス記憶システムのPhase 2実装完了[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m  [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m[[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mmem-003[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m] [0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mRESTful API設計とエンドポイント定義[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-box[39m
                [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
              [36m&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m詳細:[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mID: [0m
                  [0mmem-001[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mアクセス数: [0m
                  [0m15[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0m成功率: [0m
                  [0m92.0[0m
                  [0m%[0m
                [36m&lt;/ink-text&gt;[39m
                [36m&lt;ink-text[39m
                  [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
                [36m&gt;[39m
                  [0mタグ: [0m
                  [0mgpt5, prompting, analysis[0m
                [36m&lt;/ink-text&gt;[39m
              [36m&lt;/ink-box&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: Loading.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            シナプス記憶システム ダッシュボード
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              1
              ] 
              記憶一覧
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              2
              ] 
              シナプス結合
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              3
              ] 
              ネットワーク診断
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              [
              4
              ] 
              設定
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                記憶一覧 (
                3
                件)
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ► 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  GPT-5プロンプトガイドの分析結果
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-002
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  シナプス記憶システムのPhase 2実装完了
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                    
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  [
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  mem-003
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ] 
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  RESTful API設計とエンドポイント定義
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-box
                style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
              &gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  詳細:
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  ID: 
                  mem-001
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  アクセス数: 
                  15
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  成功率: 
                  92.0
                  %
                &lt;/ink-text&gt;
                &lt;ink-text
                  style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
                &gt;
                  タグ: 
                  gpt5, prompting, analysis
                &lt;/ink-text&gt;
              &lt;/ink-box&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
 ❯ Proxy.waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:243:11
            </failure>
        </testcase>
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="SynapticMemoryDashboard &gt; タブ間の切り替えが正しく動作すること" time="0.008132458">
            <failure message="Unable to find an element with the text: テストメモリ1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;ink-box[39m
      [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
    [36m&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mシナプス記憶システム ダッシュボード[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m1[0m
            [0m] [0m
            [0m記憶一覧[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m2[0m
            [0m] [0m
            [0mシナプス結合[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m3[0m
            [0m] [0m
            [0mネットワーク診断[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-text[39m
            [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
          [36m&gt;[39m
            [0m[[0m
            [0m4[0m
            [0m] [0m
            [0m設定[0m
          [36m&lt;/ink-text&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-box[39m
          [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
        [36m&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-text[39m
              [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
            [36m&gt;[39m
              [0m記憶一覧 ([0m
              [0m3[0m
              [0m件)[0m
            [36m&lt;/ink-text&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m► [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mGPT-5プロンプトガイドの分析結果[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-002[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mシナプス記憶システムのPhase 2実装完了[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m  [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m[[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mmem-003[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m] [0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mRESTful API設計とエンドポイント定義[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
          [36m&lt;ink-box[39m
            [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
          [36m&gt;[39m
            [36m&lt;ink-box[39m
              [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;[39m
            [36m&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m詳細:[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mID: [0m
                [0mmem-001[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mアクセス数: [0m
                [0m15[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0m成功率: [0m
                [0m92.0[0m
                [0m%[0m
              [36m&lt;/ink-text&gt;[39m
              [36m&lt;ink-text[39m
                [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
              [36m&gt;[39m
                [0mタグ: [0m
                [0mgpt5, prompting, analysis[0m
              [36m&lt;/ink-text&gt;[39m
            [36m&lt;/ink-box&gt;[39m
          [36m&lt;/ink-box&gt;[39m
        [36m&lt;/ink-box&gt;[39m
      [36m&lt;/ink-box&gt;[39m
      [36m&lt;ink-box[39m
        [33mstyle[39m=[32m&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;[39m
      [36m&gt;[39m
        [36m&lt;ink-text[39m
          [33mstyle[39m=[32m&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;[39m
        [36m&gt;[39m
          [0mTab: タブ切替 | ↑↓: 記憶選択 | q: 終了[0m
        [36m&lt;/ink-text&gt;[39m
      [36m&lt;/ink-box&gt;[39m
    [36m&lt;/ink-box&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: テストメモリ1. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;ink-box
      style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; width: 52px; height: 20px; padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
    &gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          シナプス記憶システム ダッシュボード
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            1
            ] 
            記憶一覧
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            2
            ] 
            シナプス結合
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            3
            ] 
            ネットワーク診断
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-right: 2px; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-text
            style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
          &gt;
            [
            4
            ] 
            設定
          &lt;/ink-text&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 1; flex-shrink: 1; overflow: hidden; overflow-x: hidden; overflow-y: hidden;&quot;
      &gt;
        &lt;ink-box
          style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 1; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
        &gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-bottom: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-text
              style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
            &gt;
              記憶一覧 (
              3
              件)
            &lt;/ink-text&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 0; width: 48px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ► 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                GPT-5プロンプトガイドの分析結果
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-002
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                シナプス記憶システムのPhase 2実装完了
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                  
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                [
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                mem-003
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ] 
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                RESTful API設計とエンドポイント定義
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
          &lt;ink-box
            style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
          &gt;
            &lt;ink-box
              style=&quot;flex-wrap: nowrap; flex-direction: column; flex-grow: 0; flex-shrink: 1; overflow-x: visible; overflow-y: visible;&quot;
            &gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                詳細:
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                ID: 
                mem-001
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                アクセス数: 
                15
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                成功率: 
                92.0
                %
              &lt;/ink-text&gt;
              &lt;ink-text
                style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
              &gt;
                タグ: 
                gpt5, prompting, analysis
              &lt;/ink-text&gt;
            &lt;/ink-box&gt;
          &lt;/ink-box&gt;
        &lt;/ink-box&gt;
      &lt;/ink-box&gt;
      &lt;ink-box
        style=&quot;flex-wrap: nowrap; flex-direction: row; flex-grow: 0; flex-shrink: 1; margin-top: 1px; border-color: rgb(108, 112, 134); padding: 1px; overflow-x: visible; overflow-y: visible;&quot;
      &gt;
        &lt;ink-text
          style=&quot;flex-grow: 0; flex-shrink: 1; flex-direction: row; text-wrap: wrap;&quot;
        &gt;
          Tab: タブ切替 | ↑↓: 記憶選択 | q: 終了
        &lt;/ink-text&gt;
      &lt;/ink-box&gt;
    &lt;/ink-box&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/ui/components/SynapticMemoryDashboard.test.tsx:252:19
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ToolStatsDisplay.test.tsx" timestamp="2025-08-12T09:26:45.289Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="src/ui/components/ToolStatsDisplay.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/components/ToolStatsDisplay.tsx:18:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/SessionContext.test.tsx" timestamp="2025-08-12T09:26:45.290Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="src/ui/contexts/SessionContext.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/atCommandProcessor.test.ts" timestamp="2025-08-12T09:26:45.291Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="src/ui/hooks/atCommandProcessor.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/atCommandProcessor.ts:10:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/shellCommandProcessor.test.ts" timestamp="2025-08-12T09:26:45.292Z" hostname="63accec1df8b" tests="3" failures="0" errors="0" skipped="0" time="0.017679708">
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should execute a command and update history on success" time="0.011890417">
        </testcase>
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should handle binary output" time="0.002609">
        </testcase>
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should handle command failure" time="0.00230475">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/slashCommandProcessor.test.ts" timestamp="2025-08-12T09:26:45.293Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="src/ui/hooks/slashCommandProcessor.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/slashCommandProcessor.ts:12:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useAutoAcceptIndicator.test.ts" timestamp="2025-08-12T09:26:45.294Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="src/ui/hooks/useAutoAcceptIndicator.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useAutoAcceptIndicator.ts:9:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.integration.test.ts" timestamp="2025-08-12T09:26:45.295Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="src/ui/hooks/useCompletion.integration.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useCompletion.ts:11:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.test.ts" timestamp="2025-08-12T09:26:45.296Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="src/ui/hooks/useCompletion.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useConsoleMessages.test.ts" timestamp="2025-08-12T09:26:45.297Z" hostname="63accec1df8b" tests="9" failures="0" errors="0" skipped="0" time="0.027128708">
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should initialize with an empty array of console messages" time="0.011531333">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should add a new message" time="0.002497666">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should consolidate identical consecutive messages" time="0.00161675">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should not consolidate different messages" time="0.001448166">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should not consolidate messages if type is different" time="0.001559458">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear console messages" time="0.002317417">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear pending timeout on clearConsoleMessages" time="0.001729916">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear message queue on clearConsoleMessages" time="0.001399167">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should cleanup timeout on unmount" time="0.002105">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useEditorSettings.test.ts" timestamp="2025-08-12T09:26:45.300Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="src/ui/hooks/useEditorSettings.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useEditorSettings.ts:10:1

Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGeminiStream.test.tsx" timestamp="2025-08-12T09:26:45.301Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="src/ui/hooks/useGeminiStream.test.tsx" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useGeminiStream.ts:9:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGitBranchName.test.ts" timestamp="2025-08-12T09:26:45.302Z" hostname="63accec1df8b" tests="7" failures="0" errors="0" skipped="2" time="0.019705209">
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return branch name" time="0.012941">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return undefined if git command fails" time="0.00145">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return short commit hash if branch is HEAD (detached state)" time="0.001145917">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return undefined if branch is HEAD and getting commit hash fails" time="0.000943666">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should update branch name when .git/HEAD changes" time="0.000388833">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should handle watcher setup error silently" time="0.001601833">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should cleanup watcher on unmount" time="0.000217584">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useHistoryManager.test.ts" timestamp="2025-08-12T09:26:45.304Z" hostname="63accec1df8b" tests="8" failures="0" errors="0" skipped="0" time="0.016811708">
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should initialize with an empty history" time="0.008402709">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should add an item to history with a unique ID" time="0.002064334">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should generate unique IDs for items added with the same base timestamp" time="0.001238666">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should update an existing history item" time="0.000900041">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should not change history if updateHistoryItem is called with a non-existent ID" time="0.000697209">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should clear the history" time="0.000769416">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should not add consecutive duplicate user messages" time="0.000854667">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should add duplicate user messages if they are not consecutive" time="0.000931333">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useInputHistory.test.ts" timestamp="2025-08-12T09:26:45.306Z" hostname="63accec1df8b" tests="11" failures="0" errors="0" skipped="0" time="0.019405625">
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; should initialize with historyIndex -1 and empty originalQueryBeforeNav" time="0.0084765">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; handleSubmit &gt; should call onSubmit with trimmed value and reset history" time="0.001994875">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; handleSubmit &gt; should not call onSubmit if value is empty after trimming" time="0.000897583">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should not navigate if isActive is false" time="0.000848375">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should not navigate if userMessages is empty" time="0.000694042">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should call onChange with the last message when navigating up from initial state" time="0.001123334">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should store currentQuery as originalQueryBeforeNav on first navigateUp" time="0.000920959">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should navigate through history messages on subsequent navigateUp calls" time="0.000925">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should not navigate if isActive is false" time="0.000864709">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should not navigate if historyIndex is -1 (not in history navigation)" time="0.000598">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should restore originalQueryBeforeNav when navigating down to initial state" time="0.000975667">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useKeypress.test.ts" timestamp="2025-08-12T09:26:45.309Z" hostname="63accec1df8b" tests="14" failures="0" errors="0" skipped="0" time="0.024429917">
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should not listen if isActive is false" time="0.009010583">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should listen for keypress when active" time="0.002456125">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should set and release raw mode" time="0.001029958">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should stop listening after being unmounted" time="0.000738459">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should correctly identify alt+enter (meta key)" time="0.000824208">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should process a paste as a single event" time="0.001137334">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should handle keypress interspersed with pastes" time="0.000993583">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.00097625">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should process a paste as a single event" time="0.00151975">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should handle keypress interspersed with pastes" time="0.001001">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.000882875">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should process a paste as a single event" time="0.000743125">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should handle keypress interspersed with pastes" time="0.001035875">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.00095425">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useLoadingIndicator.test.ts" timestamp="2025-08-12T09:26:45.312Z" hostname="63accec1df8b" tests="5" failures="0" errors="0" skipped="0" time="0.019158708">
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should initialize with default values when Idle" time="0.009977708">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reflect values when Responding" time="0.003041833">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should show waiting phrase and retain elapsedTime when WaitingForConfirmation" time="0.002047291">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reset elapsedTime and use a witty phrase when transitioning from WaitingForConfirmation to Responding" time="0.001708542">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reset timer and phrase when streamingState changes from Responding to Idle" time="0.001340709">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/usePhraseCycler.test.ts" timestamp="2025-08-12T09:26:45.314Z" hostname="63accec1df8b" tests="7" failures="0" errors="0" skipped="0" time="0.019219">
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should initialize with the first witty phrase when not active and not waiting" time="0.009535208">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should show &quot;Waiting for user confirmation...&quot; when isWaiting is true" time="0.001719583">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should not cycle phrases if isActive is false and not waiting" time="0.000907584">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should cycle through witty phrases when isActive is true and not waiting" time="0.001694292">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should reset to a witty phrase when isActive becomes true after being false (and not waiting)" time="0.002333208">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should clear phrase interval on unmount when active" time="0.000826">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should reset to a witty phrase when transitioning from waiting to active" time="0.001253958">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useShellHistory.test.ts" timestamp="2025-08-12T09:26:45.316Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="src/ui/hooks/useShellHistory.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useSynapticMemory.test.ts" timestamp="2025-08-12T09:26:45.317Z" hostname="63accec1df8b" tests="12" failures="12" errors="0" skipped="0" time="17.125173425">
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 初期状態が正しく設定されること" time="0.025017">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:108:38
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 初期化後にデータが読み込まれること" time="1.087731126">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:117:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; searchMemoriesが正しく動作すること" time="2.371519792">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:131:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; activateMemoryが正しく動作すること" time="5.461837419">
            <failure message="Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;." type="Error">
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;.
 ❯ src/ui/hooks/useSynapticMemory.test.ts:146:3
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; refreshDataが正しく動作すること" time="1.002388001">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:173:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 初期化エラーが正しくハンドリングされること" time="1.00174">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:201:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 検索エラーが正しくハンドリングされること" time="1.002132584">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:214:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 活性化エラーが正しくハンドリングされること" time="1.001840959">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:231:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; データ更新エラーが正しくハンドリングされること" time="1.001991375">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:256:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; クリーンアップが正しく実行されること" time="1.001977917">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:273:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 複数回の検索が正しく動作すること" time="1.001953167">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:285:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="useSynapticMemory &gt; 同期的な活性化操作が正しく動作すること" time="1.002996334">
            <failure message="expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
[36m&lt;html&gt;[39m
  [36m&lt;head /&gt;[39m
  [36m&lt;body&gt;[39m
    [36m&lt;div /&gt;[39m
  [36m&lt;/body&gt;[39m
[36m&lt;/html&gt;[39m" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

Ignored nodes: comments, script, style
&lt;html&gt;
  &lt;head /&gt;
  &lt;body&gt;
    &lt;div /&gt;
  &lt;/body&gt;
&lt;/html&gt;

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/hooks/useSynapticMemory.test.ts:314:40
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useTimer.test.ts" timestamp="2025-08-12T09:26:45.325Z" hostname="63accec1df8b" tests="8" failures="0" errors="0" skipped="0" time="0.017474042">
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should initialize with 0" time="0.008899708">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should not increment time if isActive is false" time="0.001096916">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should increment time every second if isActive is true" time="0.001602125">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should reset to 0 and start incrementing when isActive becomes true from false" time="0.000898291">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should reset to 0 when resetKey changes while active" time="0.000919167">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should be 0 if isActive is false, regardless of resetKey changes" time="0.000670208">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should clear timer on unmount" time="0.001354125">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should preserve elapsedTime when isActive becomes false, and reset to 0 when it becomes active again" time="0.001070542">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useToolScheduler.test.ts" timestamp="2025-08-12T09:26:45.328Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="src/ui/hooks/useToolScheduler.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ src/ui/hooks/useReactToolScheduler.ts:7:1

Caused by: Caused by: Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/MarkdownDisplay.test.tsx" timestamp="2025-08-12T09:26:45.329Z" hostname="63accec1df8b" tests="14" failures="0" errors="0" skipped="0" time="0.146061876">
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nothing for empty text" time="0.00885275">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a simple paragraph" time="0.004697667">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders headers with correct levels" time="0.002368292">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block with a language" time="0.01078525">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block without a language" time="0.080965458">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles unclosed (pending) code blocks" time="0.00248825">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders unordered lists with different markers" time="0.001794875">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nested unordered lists" time="0.001575291">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders ordered lists" time="0.00135975">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders horizontal rules" time="0.0055815">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders tables correctly" time="0.007200542">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles a table at the end of the input" time="0.001526583">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; inserts a single space between paragraphs" time="0.000937542">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; correctly parses a mix of markdown elements" time="0.014974875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/clipboardUtils.test.ts" timestamp="2025-08-12T09:26:45.332Z" hostname="63accec1df8b" tests="6" failures="0" errors="0" skipped="0" time="0.0028925">
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return false on non-macOS platforms" time="0.000782166">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return boolean on macOS" time="0.000087334">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should return null on non-macOS platforms" time="0.000198792">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should handle errors gracefully" time="0.000068417">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should not throw errors" time="0.000777625">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should complete without errors on valid directory" time="0.000236875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/computeStats.test.ts" timestamp="2025-08-12T09:26:45.334Z" hostname="63accec1df8b" tests="11" failures="0" errors="0" skipped="0" time="0.003025209">
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should return 0 if totalRequests is 0" time="0.000776542">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should calculate the error rate correctly" time="0.000094584">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should return 0 if totalRequests is 0" time="0.000071292">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should calculate the average latency correctly" time="0.000049">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should return 0 if prompt tokens is 0" time="0.000055875">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should calculate the cache hit rate correctly" time="0.000042041">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should return all zeros for initial empty metrics" time="0.000477083">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate API and tool time percentages" time="0.000166666">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate cache efficiency" time="0.000096458">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate success and agreement rates" time="0.000067209">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should handle division by zero gracefully" time="0.000103291">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/displayUtils.test.ts" timestamp="2025-08-12T09:26:45.337Z" hostname="63accec1df8b" tests="5" failures="0" errors="0" skipped="0" time="0.001798458">
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return green for values &gt;= green threshold" time="0.000761333">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return yellow for values &lt; green and &gt;= yellow threshold" time="0.000093667">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return red for values &lt; yellow threshold" time="0.000071666">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return defaultColor for values &lt; yellow threshold when provided" time="0.000055208">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; Threshold Constants &gt; should have the correct values" time="0.000131417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/errorParsing.test.ts" timestamp="2025-08-12T09:26:45.338Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="src/ui/utils/errorParsing.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/formatters.test.ts" timestamp="2025-08-12T09:26:45.339Z" hostname="63accec1df8b" tests="14" failures="0" errors="0" skipped="0" time="0.002096042">
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into KB" time="0.000757833">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into MB" time="0.000076667">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into GB" time="0.0000475">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format milliseconds less than a second" time="0.00008575">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration of 0" time="0.000039667">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of seconds" time="0.0000375">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in seconds with one decimal place" time="0.000035125">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of minutes" time="0.000038292">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in minutes and seconds" time="0.000035666">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of hours" time="0.000034459">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours and seconds" time="0.000035209">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours, minutes, and seconds" time="0.000033334">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle large durations" time="0.000034583">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle negative durations" time="0.000033625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/markdownUtilities.test.ts" timestamp="2025-08-12T09:26:45.343Z" hostname="63accec1df8b" tests="7" failures="0" errors="0" skipped="0" time="0.001739916">
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should split at the last double newline if not in a code block" time="0.000754625">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if no safe split point is found" time="0.000071625">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should prioritize splitting at 

 over being at the very end of the string if the end is not in a code block" time="0.000046334">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if the only 

 is inside a code block and the end of content is not" time="0.000042917">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should correctly identify the last 

 even if it is followed by text not in a code block" time="0.00004125">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content is empty" time="0.000037792">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content has no newlines and no code blocks" time="0.000037417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/textUtils.test.ts" timestamp="2025-08-12T09:26:45.344Z" hostname="63accec1df8b" tests="5" failures="0" errors="0" skipped="0" time="0.001848958">
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return true for a buffer containing a null byte" time="0.000775">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a buffer containing only text" time="0.000075916">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for an empty buffer" time="0.000050375">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a null or undefined buffer" time="0.00005575">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should only check the sample size" time="0.000172708">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/updateCheck.test.ts" timestamp="2025-08-12T09:26:45.346Z" hostname="63accec1df8b" tests="6" failures="1" errors="0" skipped="0" time="0.01837625">
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if package.json is missing" time="0.000821375">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if there is no update" time="0.0000955">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return a message if a newer version is available" time="0.012169584">
            <failure message="the given combination of arguments (null and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string" type="AssertionError">
AssertionError: the given combination of arguments (null and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
 ❯ src/ui/utils/updateCheck.test.ts:50:20
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is the same as the current version" time="0.001085333">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is older than the current version" time="0.000721833">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should handle errors gracefully" time="0.001080459">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/DiffRenderer.test.tsx" timestamp="2025-08-12T09:26:45.348Z" hostname="63accec1df8b" tests="13" failures="0" errors="0" skipped="0" time="0.158458417">
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with correct language for new file with known extension" time="0.020990375">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file with unknown extension" time="0.083759917">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file if no filename is provided" time="0.012288333">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render diff content for existing file (not calling colorizeCode directly for the whole block)" time="0.002830709">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle diff with only header and no changes" time="0.001564708">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle empty diff content" time="0.000646125">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render a gap indicator for skipped lines" time="0.004987042">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should not render a gap indicator for small gaps (&lt;= MAX_CONTEXT_LINES_WITHOUT_GAP)" time="0.006438833">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height undefined" time="0.008292958">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height 6" time="0.003451583">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 30 and height 6" time="0.003410208">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with a SVN diff format" time="0.002804416">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a new file with no file extension correctly" time="0.005991042">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolConfirmationMessage.test.tsx" timestamp="2025-08-12T09:26:45.351Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/messages/ToolConfirmationMessage.test.tsx" name="src/ui/components/messages/ToolConfirmationMessage.test.tsx" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolMessage.test.tsx" timestamp="2025-08-12T09:26:45.352Z" hostname="63accec1df8b" tests="11" failures="0" errors="0" skipped="0" time="0.032529">
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders basic tool information" time="0.015395209">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ✔ for Success status" time="0.001379875">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows o for Pending status" time="0.001310792">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ? for Confirming status" time="0.001388167">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows - for Canceled status" time="0.001175292">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows x for Error status" time="0.00141425">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is Idle" time="0.001719584">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is WaitingForConfirmation" time="0.001406625">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows MockRespondingSpinner for Executing status when streamingState is Responding" time="0.001645291">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders DiffRenderer for diff results" time="0.002062">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders emphasis correctly" time="0.002845709">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/MaxSizedBox.test.tsx" timestamp="2025-08-12T09:26:45.355Z" hostname="63accec1df8b" tests="21" failures="0" errors="0" skipped="0" time="0.048250208">
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders children without truncation when they fit" time="0.014255083">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines when content exceeds maxHeight" time="0.001805583">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines at the end when content exceeds maxHeight and overflowDirection is bottom" time="0.001082541">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text that exceeds maxWidth" time="0.001513417">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles mixed wrapping and non-wrapping segments" time="0.005718916">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles words longer than maxWidth by splitting them" time="0.003363584">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; does not truncate when maxHeight is undefined" time="0.000943083">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden" time="0.000845375">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden and overflowDirection is bottom" time="0.000814209">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders an empty box for empty children" time="0.000317209">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte unicode characters correctly" time="0.000871125">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte emoji characters correctly" time="0.001175334">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; falls back to an ellipsis when width is extremely small" time="0.000960708">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates long non-wrapping text with ellipsis" time="0.000786334">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates non-wrapping text containing line breaks" time="0.001158917">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates emoji characters correctly with ellipsis" time="0.000898667">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows ellipsis for multiple rows with long non-wrapping text" time="0.001466167">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; accounts for additionalHiddenLinesCount" time="0.000998875">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles React.Fragment as a child" time="0.0015745">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the top" time="0.0028825">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the bottom" time="0.0040165">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/text-buffer.test.ts" timestamp="2025-08-12T09:26:45.360Z" hostname="63accec1df8b" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="src/ui/components/shared/text-buffer.test.ts" time="0">
            <failure message="Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;../../../../src/functions/intelligent-registry-integration.js&quot; from &quot;../core/dist/src/tools/read-file.js&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/core/dist/src/tools/read-file.js:135:52
  81 |          // IntelligentFileSystemを必須として使用
  82 |          try {
  83 |              const { getOrCreateInstances } = await import(&apos;../../../../src/functions/intelligent-registry-integration.js&apos;);
     |                                                            ^
  84 |              const { intelligentFS } = await getOrCreateInstances();
  85 |              const result = await intelligentFS.readFileIntelligent(params.absolute_path);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31446:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31443:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:29992:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30050:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:30018:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:31260:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26434:26
            </failure>
        </testcase>
    </testsuite>
</testsuites>
