<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="474" failures="66" errors="0" time="4.702401126">
    <testsuite name="src/gemini.test.tsx" timestamp="2025-08-13T01:39:51.106Z" hostname="dadcaeef10d0" tests="1" failures="0" errors="0" skipped="0" time="0.003797917">
        <testcase classname="src/gemini.test.tsx" name="gemini.tsx main function &gt; should call process.exit(1) if settings have errors" time="0.003110209">
        </testcase>
    </testsuite>
    <testsuite name="src/nonInteractiveCli.test.ts" timestamp="2025-08-13T01:39:51.107Z" hostname="dadcaeef10d0" tests="6" failures="6" errors="0" skipped="0" time="0.008220916">
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should process input and write text output" time="0.005064584">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:85:5
            </failure>
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should handle a single tool call and respond" time="0.00060475">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:138:5
            </failure>
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should handle error during tool execution" time="0.000541458">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:198:5
            </failure>
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should exit with error if sendMessageStream throws initially" time="0.000376334">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:222:5
            </failure>
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should not exit if a tool is not found, and should send error back to model" time="0.00044">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:274:5
            </failure>
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should exit when max session turns are exceeded" time="0.000433792">
            <failure message="Cannot read properties of undefined (reading &apos;file&apos;)" type="TypeError">
TypeError: Cannot read properties of undefined (reading &apos;file&apos;)
 ❯ Module.runNonInteractive src/nonInteractiveCli.ts:71:12
 ❯ src/nonInteractiveCli.test.ts:335:5
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/config/auth.test.ts" timestamp="2025-08-13T01:39:51.112Z" hostname="dadcaeef10d0" tests="14" failures="0" errors="0" skipped="0" time="0.003617583">
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return null for LOGIN_WITH_GOOGLE" time="0.001182083">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return null for CLOUD_SHELL" time="0.000107666">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_GEMINI &gt; should return null if AGENTS_API_KEY is set" time="0.000115">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_GEMINI &gt; should return an error message if AGENTS_API_KEY is not set" time="0.000187667">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return null if GOOGLE_CLOUD_PROJECT and GOOGLE_CLOUD_LOCATION are set" time="0.000093667">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return null if GOOGLE_API_KEY is set" time="0.00010875">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return an error message if no required environment variables are set" time="0.000069208">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return null if OPENAI_API_KEY and OPENAI_BASE_URL are set for external API" time="0.000128291">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return null if only base URL is set for local LLM" time="0.000084042">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return null if LOCAL_LLM_BASE_URL is set for local LLM" time="0.000133834">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return null if LOCAL_LLM_BASE_URL is set with host.docker.internal" time="0.000183291">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return an error message if API KEY is not set for external API" time="0.000164291">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; OPENAI_COMPATIBLE &gt; should return an error message if no base URL is set" time="0.000071125">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return an error message for an invalid auth method" time="0.00011975">
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.integration.test.ts" timestamp="2025-08-13T01:39:51.115Z" hostname="dadcaeef10d0" tests="11" failures="0" errors="0" skipped="0" time="0.034162667">
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should load default file filtering settings" time="0.024596875">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should load custom file filtering settings from configuration" time="0.001011917">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should merge user and workspace file filtering settings" time="0.000844">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle partial configuration objects gracefully" time="0.001043042">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle empty configuration objects gracefully" time="0.000875333">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle missing configuration sections gracefully" time="0.000803666">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Real-world Configuration Scenarios &gt; should handle a security-focused configuration" time="0.000718042">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Real-world Configuration Scenarios &gt; should handle a CI/CD environment configuration" time="0.000621459">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Checkpointing Configuration &gt; should enable checkpointing when the setting is true" time="0.000628708">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Extension Context Files &gt; should have an empty array for extension context files by default" time="0.001121916">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Extension Context Files &gt; should correctly store and return extension context file paths" time="0.000910791">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.test.ts" timestamp="2025-08-13T01:39:51.121Z" hostname="dadcaeef10d0" tests="59" failures="0" errors="0" skipped="0" time="0.389038709">
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should throw an error when both --prompt and --prompt-interactive are used together" time="0.02528675">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should throw an error when using short flags -p and -i together" time="0.00480225">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow --prompt without --prompt-interactive" time="0.003344209">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow --prompt-interactive without --prompt" time="0.007141">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow -i flag as alias for --prompt-interactive" time="0.00422975">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to true when --show-memory-usage flag is present" time="0.030437958">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to false when --memory flag is not present" time="0.009328958">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to false by default from settings if CLI flag is not present" time="0.00432075">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should prioritize CLI flag over settings for showMemoryUsage (CLI true, settings false)" time="0.004280041">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to false by default when no flag or setting is present" time="0.00640775">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to true when --telemetry flag is present" time="0.010294667">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
            <system-err>
Accessing resource attributes before async attributes settled

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to false when --no-telemetry flag is present" time="0.014955625">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry value from settings if CLI flag is not present (settings true)" time="0.004563625">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry value from settings if CLI flag is not present (settings false)" time="0.01193">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry CLI flag (true) over settings (false)" time="0.003427583">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --no-telemetry CLI flag (false) over settings (true)" time="0.004682">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry OTLP endpoint from settings if CLI flag is not present" time="0.004432292">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-otlp-endpoint CLI flag over settings" time="0.011044541">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default endpoint if no OTLP endpoint is provided via CLI or settings" time="0.008417625">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry target from settings if CLI flag is not present" time="0.004098167">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-target CLI flag over settings" time="0.003931583">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default target if no target is provided via CLI or settings" time="0.004187">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry log prompts from settings if CLI flag is not present" time="0.018372125">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-log-prompts CLI flag (true) over settings (false)" time="0.005420583">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --no-telemetry-log-prompts CLI flag (false) over settings (true)" time="0.003554541">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default log prompts (true) if no value is provided via CLI or settings" time="0.007699708">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="Hierarchical Memory Loading (config.ts) - Placeholder Suite &gt; should pass extension context file paths to loadServerHierarchicalMemory" time="0.007338791">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeMcpServers &gt; should not modify the original settings object" time="0.003627042">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should merge excludeTools from settings and extensions" time="0.005192208">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle overlapping excludeTools between settings and extensions" time="0.004344417">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle overlapping excludeTools between extensions" time="0.003435209">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should return an empty array when no excludeTools are specified" time="0.0055875">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle settings with excludeTools but no extensions" time="0.004284083">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle extensions with excludeTools but no settings" time="0.0043075">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should not modify the original settings object" time="0.003502083">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow all MCP servers if the flag is not provided" time="0.007157459">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow only the specified MCP server" time="0.004065667">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow multiple specified MCP servers" time="0.003942333">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should handle server names that do not exist" time="0.004933833">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow no MCP servers if the flag is provided but empty" time="0.004799209">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should read allowMCPServers from settings" time="0.003336834">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should read excludeMCPServers from settings" time="0.003820333">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should override allowMCPServers with excludeMCPServers if overlapping " time="0.005748625">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should prioritize mcp server flag if set " time="0.005813958">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig extensions &gt; should not filter extensions if --extensions flag is not used" time="0.005633625">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig extensions &gt; should filter extensions if --extensions flag is used" time="0.004110917">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2

[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false by default" time="0.005672916">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false if --ide-mode is true but TERM_PROGRAM is not vscode" time="0.003711083">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false if settings.ideMode is true but TERM_PROGRAM is not vscode" time="0.003454834">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be true when --ide-mode is set and TERM_PROGRAM is vscode" time="0.010437084">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be true when settings.ideMode is true and TERM_PROGRAM is vscode" time="0.006054291">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should prioritize --ide-mode (true) over settings (false) when TERM_PROGRAM is vscode" time="0.003419167">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should prioritize --no-ide-mode (false) over settings (true) even when TERM_PROGRAM is vscode" time="0.004312">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false when --ide-mode is true, TERM_PROGRAM is vscode, but SANDBOX is set" time="0.005635125">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false when settings.ideMode is true, TERM_PROGRAM is vscode, but SANDBOX is set" time="0.005548042">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should add _ide_server when ideMode is true" time="0.008379209">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should throw an error if ideMode is true and no port is set" time="0.004062708">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should warn and overwrite if settings contain the reserved _ide_server name and ideMode is active" time="0.007714875">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should NOT warn if settings contain the reserved _ide_server name and ideMode is NOT active" time="0.003302167">
            <system-out>
[Config constructor] Called with authType: [90mundefined[39m
[Config constructor] No authType provided, skipping createContentGeneratorConfig

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="src/config/extension.test.ts" timestamp="2025-08-13T01:39:51.150Z" hostname="dadcaeef10d0" tests="7" failures="1" errors="0" skipped="0" time="0.019366917">
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path when GEMINI.md is present" time="0.016417291">
            <system-out>
Loading extension: ext1 (version: 1.0.0)
Loading extension: ext2 (version: 2.0.0)

            </system-out>
            <failure message="expected [] to deeply equal [ Array(1) ]" type="AssertionError">
AssertionError: expected [] to deeply equal [ Array(1) ]

- Expected
+ Received

- [
-   &quot;/tmp/gemini-cli-test-workspace-152Uje/.gemini/extensions/ext1/GEMINI.md&quot;,
- ]
+ []

 ❯ src/config/extension.test.ts:59:32
            </failure>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path from the extension config" time="0.000923958">
            <system-out>
Loading extension: ext1 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return all extensions if no enabled extensions are provided" time="0.000136291">
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return only the enabled extensions" time="0.000264">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Activated extension: ext3 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return no extensions when &quot;none&quot; is provided" time="0.000123541">
            <system-out>
All extensions are disabled.

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should handle case-insensitivity" time="0.000400209">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Disabled extension: ext3

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should log an error for unknown extensions" time="0.000363583">
        </testcase>
    </testsuite>
    <testsuite name="src/config/settings.test.ts" timestamp="2025-08-13T01:39:51.154Z" hostname="dadcaeef10d0" tests="25" failures="0" errors="0" skipped="0" time="0.015705291">
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load empty settings if no files exist" time="0.002104959">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load system settings if only system file exists" time="0.001097583">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load user settings if only user file exists" time="0.000655166">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load workspace settings if only workspace file exists" time="0.000687584">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should merge user and workspace settings, with workspace taking precedence" time="0.000976791">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should merge system, user and workspace settings, with system taking precedence over workspace, and workspace over user" time="0.000664917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle contextFileName correctly when only in user settings" time="0.000348667">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle contextFileName correctly when only in workspace settings" time="0.000257709">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should default contextFileName to undefined if not in any settings file" time="0.000544541">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load telemetry setting from user settings" time="0.000415917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load telemetry setting from workspace settings" time="0.000237666">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize workspace telemetry setting over user setting" time="0.000401583">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should have telemetry as undefined if not in any settings file" time="0.000253917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle JSON parsing errors gracefully" time="0.000888041">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in user settings" time="0.000358375">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in workspace settings" time="0.000283333">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize user env variables over workspace env variables if keys clash after resolution" time="0.000689292">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize workspace env variables over user env variables if keys clash after resolution" time="0.001089584">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize system env variables over workspace env variables if keys clash after resolution" time="0.000511417">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should leave unresolved environment variables as is" time="0.000331041">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve multiple environment variables in a single string" time="0.000498458">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in arrays" time="0.000292541">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should correctly pass through null, boolean, and number types, and handle undefined properties" time="0.000430084">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve multiple concatenated environment variables in a single string value" time="0.000265792">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; LoadedSettings class &gt; setValue should update the correct scope and recompute merged settings" time="0.000494625">
        </testcase>
    </testsuite>
    <testsuite name="src/services/CommandService.test.ts" timestamp="2025-08-13T01:39:51.160Z" hostname="dadcaeef10d0" tests="6" failures="4" errors="0" skipped="0" time="0.009430916">
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; should initialize with an empty command tree" time="0.001113167">
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; loadCommands &gt; should load the built-in commands into the command tree" time="0.006074583">
            <failure message="expected 18 to be 17 // Object.is equality" type="AssertionError">
AssertionError: expected 18 to be 17 // Object.is equality

- Expected
+ Received

- 17
+ 18

 ❯ src/services/CommandService.test.ts:117:29
            </failure>
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; loadCommands &gt; should include ide command when ideMode is on" time="0.000383166">
            <failure message="expected 19 to be 18 // Object.is equality" type="AssertionError">
AssertionError: expected 19 to be 18 // Object.is equality

- Expected
+ Received

- 18
+ 19

 ❯ src/services/CommandService.test.ts:147:29
            </failure>
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; loadCommands &gt; should overwrite any existing commands when called again" time="0.000226125">
            <failure message="expected 18 to be 17 // Object.is equality" type="AssertionError">
AssertionError: expected 18 to be 17 // Object.is equality

- Expected
+ Received

- 17
+ 18

 ❯ src/services/CommandService.test.ts:157:53
            </failure>
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; getCommandTree &gt; should return the current command tree" time="0.0003225">
            <failure message="expected 18 to be 17 // Object.is equality" type="AssertionError">
AssertionError: expected 18 to be 17 // Object.is equality

- Expected
+ Received

- 17
+ 18

 ❯ src/services/CommandService.test.ts:176:35
            </failure>
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when initialized with an injected loader function &gt; should use the provided loader instead of the built-in one" time="0.000521792">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/App.test.tsx" timestamp="2025-08-13T01:39:51.163Z" hostname="dadcaeef10d0" tests="16" failures="13" errors="0" skipped="0" time="0.50020825">
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display default &quot;GEMINI.md&quot; in footer when contextFileName is not set and count is 1" time="0.08885325">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 1 GEMINI.md file&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 1 GEMINI.md file&apos;

- Expected
+ Received

- Using 1 GEMINI.md file
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:277:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display default &quot;GEMINI.md&quot; with plural when contextFileName is not set and count is &gt; 1" time="0.037124042">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 GEMINI.md files&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 GEMINI.md files&apos;

- Expected
+ Received

- Using 2 GEMINI.md files
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:294:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display custom contextFileName in footer when set and count is 1" time="0.0497475">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 1 AGENTS.md file&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 1 AGENTS.md file&apos;

- Expected
+ Received

- Using 1 AGENTS.md file
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:314:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display a generic message when multiple context files with different names are provided" time="0.043402042">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 context files&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 context files&apos;

- Expected
+ Received

- Using 2 context files
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:337:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display custom contextFileName with plural when set and count is &gt; 1" time="0.028146416">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 3 MY_NOTES.TXT files&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 3 MY_NOTES.TXT files&apos;

- Expected
+ Received

- Using 3 MY_NOTES.TXT files
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:357:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display context file message if count is 0, even if contextFileName is set" time="0.02678875">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display GEMINI.md and MCP server count when both are present" time="0.018519833">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;server&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;server&apos;

- Expected
+ Received

- server
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:397:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display only MCP server count when GEMINI.md count is 0" time="0.022655292">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 MCP servers&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Using 2 MCP servers&apos;

- Expected
+ Received

- Using 2 MCP servers
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:418:25
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display Tips component by default" time="0.021841875">
            <failure message="expected &quot;spy&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once
 ❯ src/ui/App.test.tsx:431:29
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display Tips component when hideTips is true" time="0.017401542">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display Header component by default" time="0.019170667">
            <failure message="expected &quot;spy&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once
 ❯ src/ui/App.test.tsx:464:31
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display Header component when hideBanner is true" time="0.023106833">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should show tips if system says show, but workspace and user settings say hide" time="0.020586125">
            <failure message="expected &quot;spy&quot; to be called at least once" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called at least once
 ❯ src/ui/App.test.tsx:501:29
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; when no theme is set &gt; should display theme dialog if NO_COLOR is not set" time="0.024420667">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Select Theme&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Select Theme&apos;

- Expected
+ Received

- Select Theme
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:531:27
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; when no theme is set &gt; should display a message if NO_COLOR is set" time="0.023088375">
            <failure message="expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Theme configuration unavailable due t…&apos;" type="AssertionError">
AssertionError: expected &apos;\n  ERROR  MemoryManager not initiali…&apos; to contain &apos;Theme configuration unavailable due t…&apos;

- Expected
+ Received

- Theme configuration unavailable due to NO_COLOR env variable.
+
+   ERROR  MemoryManager not initialized. Please provide config on first call.
+
+  src/memory/memoryManager.ts:342:11
+
+  339:   }
+  340:
+  341:   if (!memoryManagerInstance) {
+  342:     throw new Error(&apos;MemoryManager not initialized. Please provide config on first call.&apos;);
+  343:   }
+  344:
+  345:   return memoryManagerInstance;
+
+  - getMemoryManager (src/memory/memoryManager.ts:342:11)
+  - useMemoryIntegration (src/ui/hooks/useMemoryIntegration.ts:16:32)
+  - App (src/ui/App.tsx:126:7)
+  -Object.react-stack-bottom- (/agents/node_modules/react-reconciler/cjs/react-reconciler.developmen
+   rame                      t.js:15859:20)
+  -renderWithHooks (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:3221:2
+                  2)
+  -updateFunctionCompone (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:
+   t                    6475:19)
+  - beginWork (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:8009:18)
+  -runWithFiberInDEV (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:1738
+                    :13)
+  -performUnitOfWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12834
+                   :22)
+  -workLoopSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12644:41)
+
+  -renderRootSync (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12624:1
+                 1)
+  -performWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12135
+                   :44)
+  -performSyncWorkOnRoo (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:2
+                       446:7)
+  -flushSyncWorkAcrossRoots_ (/agents/node_modules/react-reconciler/cjs/react-reconciler.development
+   mpl                      .js:2294:21)
+  -Object.flushSyncWor (/agents/node_modules/react-reconciler/cjs/react-reconciler.development.js:12
+                      394:12)
+  - Ink.render (file:///agents/node_modules/ink/src/ink.tsx:226:14)
+

 ❯ src/ui/App.test.tsx:546:27
            </failure>
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; with initial prompt from --prompt-interactive &gt; should submit the initial prompt automatically" time="0.034380334">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;hello from prompt-interactive&apos; ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;hello from prompt-interactive&apos; ]

Number of calls: 0

 ❯ src/ui/App.test.tsx:591:31
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/test-utils/mockCommandContext.test.ts" timestamp="2025-08-13T01:39:51.172Z" hostname="dadcaeef10d0" tests="3" failures="0" errors="0" skipped="0" time="0.00272">
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should return a valid CommandContext object with default mocks" time="0.001470459">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply top-level overrides correctly" time="0.000374">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply deeply nested overrides correctly" time="0.000202">
        </testcase>
    </testsuite>
    <testsuite name="src/utils/startupWarnings.test.ts" timestamp="2025-08-13T01:39:51.172Z" hostname="dadcaeef10d0" tests="4" failures="0" errors="0" skipped="4" time="0">
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return warnings from the file and delete it" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return an empty array if the file does not exist" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return an error message if reading the file fails" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return a warning if deleting the file fails" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/utils/userStartupWarnings.test.ts" timestamp="2025-08-13T01:39:51.174Z" hostname="dadcaeef10d0" tests="3" failures="0" errors="0" skipped="0" time="0.006445125">
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should return a warning when running in home directory" time="0.00293675">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should not return a warning when running in a project directory" time="0.000365917">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should handle errors when checking directory" time="0.000977375">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/SessionContext.test.tsx" timestamp="2025-08-13T01:39:51.175Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="src/ui/contexts/SessionContext.test.tsx" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/aboutCommand.test.ts" timestamp="2025-08-13T01:39:51.176Z" hostname="dadcaeef10d0" tests="4" failures="0" errors="0" skipped="0" time="0.004887583">
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should have the correct name and description" time="0.001464208">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should call addItem with all version info" time="0.001813417">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should show the correct sandbox environment variable" time="0.000586416">
        </testcase>
        <testcase classname="src/ui/commands/aboutCommand.test.ts" name="aboutCommand &gt; should show sandbox-exec profile when applicable" time="0.000285709">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/authCommand.test.ts" timestamp="2025-08-13T01:39:51.177Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.002843875">
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should return a dialog action to open the auth dialog" time="0.001882833">
        </testcase>
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should have the correct name and description" time="0.000280292">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/bugCommand.test.ts" timestamp="2025-08-13T01:39:51.178Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.003249583">
        <testcase classname="src/ui/commands/bugCommand.test.ts" name="bugCommand &gt; should generate the default GitHub issue URL" time="0.0022055">
        </testcase>
        <testcase classname="src/ui/commands/bugCommand.test.ts" name="bugCommand &gt; should use a custom URL template from config if provided" time="0.000336167">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/chatCommand.test.ts" timestamp="2025-08-13T01:39:51.179Z" hostname="dadcaeef10d0" tests="11" failures="0" errors="0" skipped="0" time="0.006804667">
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; should have the correct main command definition" time="0.00166375">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; list subcommand &gt; should inform when no checkpoints are found" time="0.000785541">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; list subcommand &gt; should list found checkpoints" time="0.00050275">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should return an error if tag is missing" time="0.000285667">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should inform if conversation history is empty" time="0.000319">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; save subcommand &gt; should save the conversation" time="0.000682125">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should return an error if tag is missing" time="0.000326958">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should inform if checkpoint is not found" time="0.000365292">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; should resume a conversation" time="0.000339125">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; completion &gt; should provide completion suggestions" time="0.000344875">
        </testcase>
        <testcase classname="src/ui/commands/chatCommand.test.ts" name="chatCommand &gt; resume subcommand &gt; completion &gt; should suggest filenames sorted by modified time (newest first)" time="0.00040375">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/clearCommand.test.ts" timestamp="2025-08-13T01:39:51.181Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.00348775">
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should set debug message, reset chat, and clear UI when config is available" time="0.002357875">
        </testcase>
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should not attempt to reset chat if config service is not available" time="0.000423917">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/compressCommand.test.ts" timestamp="2025-08-13T01:39:51.182Z" hostname="dadcaeef10d0" tests="5" failures="1" errors="0" skipped="0" time="0.018465333">
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="compressCommand &gt; should do nothing if a compression is already pending" time="0.002981458">
        </testcase>
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="compressCommand &gt; should set pending item, call tryCompressChat, and add result on success" time="0.013785583">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…}, Any&lt;Number&gt; ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   ObjectContaining {[90m
[32m-     &quot;compression&quot;: {[90m
[32m-       &quot;isPending&quot;: false,[90m
[32m-       &quot;newTokenCount&quot;: 100,[90m
[32m-       &quot;originalTokenCount&quot;: 200,[90m
[31m+   {[90m
[31m+     &quot;text&quot;: &quot;Failed to compress chat history: context.services.config?.getModel is not a function&quot;,[90m
[31m+     &quot;type&quot;: &quot;error&quot;,[90m
[2m    },[22m
[32m-     &quot;type&quot;: &quot;compression&quot;,[90m
[32m-   },[90m
[32m-   Any&lt;Number&gt;,[90m
[31m+   1755049166521,[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ ObjectContaining{…}, Any&lt;Number&gt; ]

Received: 

  1st spy call:

  [
-   ObjectContaining {
-     &quot;compression&quot;: {
-       &quot;isPending&quot;: false,
-       &quot;newTokenCount&quot;: 100,
-       &quot;originalTokenCount&quot;: 200,
+   {
+     &quot;text&quot;: &quot;Failed to compress chat history: context.services.config?.getModel is not a function&quot;,
+     &quot;type&quot;: &quot;error&quot;,
    },
-     &quot;type&quot;: &quot;compression&quot;,
-   },
-   Any&lt;Number&gt;,
+   1755049166521,
  ]


Number of calls: 1

 ❯ src/ui/commands/compressCommand.test.ts:78:32
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="compressCommand &gt; should add an error message if tryCompressChat returns falsy" time="0.000417666">
        </testcase>
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="compressCommand &gt; should add an error message if tryCompressChat throws" time="0.000393875">
        </testcase>
        <testcase classname="src/ui/commands/compressCommand.test.ts" name="compressCommand &gt; should clear the pending item in a finally block" time="0.000177791">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/docsCommand.test.ts" timestamp="2025-08-13T01:39:51.184Z" hostname="dadcaeef10d0" tests="3" failures="0" errors="0" skipped="0" time="0.003964125">
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should add an info message and call &apos;open&apos; in a non-sandbox environment" time="0.002594875">
        </testcase>
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should only add an info message in a sandbox environment" time="0.000415834">
        </testcase>
        <testcase classname="src/ui/commands/docsCommand.test.ts" name="docsCommand &gt; should not open browser for &apos;sandbox-exec&apos;" time="0.000252625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/editorCommand.test.ts" timestamp="2025-08-13T01:39:51.185Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.002589792">
        <testcase classname="src/ui/commands/editorCommand.test.ts" name="editorCommand &gt; should return a dialog action to open the editor dialog" time="0.001679375">
        </testcase>
        <testcase classname="src/ui/commands/editorCommand.test.ts" name="editorCommand &gt; should have the correct name and description" time="0.0001265">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/extensionsCommand.test.ts" timestamp="2025-08-13T01:39:51.186Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.003815709">
        <testcase classname="src/ui/commands/extensionsCommand.test.ts" name="extensionsCommand &gt; should display &quot;No active extensions.&quot; when none are found" time="0.002837542">
        </testcase>
        <testcase classname="src/ui/commands/extensionsCommand.test.ts" name="extensionsCommand &gt; should list active extensions when they are found" time="0.0003305">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/helpCommand.test.ts" timestamp="2025-08-13T01:39:51.186Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.002947209">
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should return a dialog action and log a debug message for &apos;/help&apos;" time="0.002111375">
        </testcase>
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should also be triggered by its alternative name &apos;?&apos;" time="0.000126666">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/ideCommand.test.ts" timestamp="2025-08-13T01:39:51.187Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/ideCommand.test.ts" name="src/ui/commands/ideCommand.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/ideCommand.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/ideCommand.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/cli/src/ui/commands/ideCommand.test.ts:14:0
  12 |  const __vi_import_1__ = await import(&quot;child_process&quot;);
  13 |  const __vi_import_2__ = await import(&quot;glob&quot;);
  14 |  const __vi_import_3__ = await import(&quot;@google/gemini-cli-core&quot;);
     |                                       ^
  15 |  /**
  16 |   * @license
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31553:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31550:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30022:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30080:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30048:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31351:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:26438:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/mcpCommand.test.ts" timestamp="2025-08-13T01:39:51.188Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/commands/mcpCommand.test.ts" name="src/ui/commands/mcpCommand.test.ts" time="0">
            <failure message="Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/mcpCommand.test.ts&quot;. Does the file exist?" type="Error">
Error: Failed to resolve import &quot;@google/gemini-cli-core&quot; from &quot;src/ui/commands/mcpCommand.test.ts&quot;. Does the file exist?
  Plugin: vite:import-analysis
  File: /agents/packages/cli/src/ui/commands/mcpCommand.test.ts:10:0
  12 |  const __vi_import_0__ = await import(&quot;./mcpCommand.js&quot;);
  13 |  const __vi_import_1__ = await import(&quot;../../test-utils/mockCommandContext.js&quot;);
  14 |  const __vi_import_2__ = await import(&quot;@google/gemini-cli-core&quot;);
     |                                       ^
  15 |  const __vi_import_3__ = await import(&quot;open&quot;);
  16 |  const __vi_import_4__ = await import(&quot;@google/genai&quot;);
 ❯ TransformPluginContext._formatLog ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31553:43
 ❯ TransformPluginContext.error ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31550:14
 ❯ normalizeUrl ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30022:18
 ❯ ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30080:32
 ❯ TransformPluginContext.transform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:30048:4
 ❯ EnvironmentPluginContainer.transform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:31351:14
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-CMEinpL-.js:26438:26
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/memoryCommand.test.ts" timestamp="2025-08-13T01:39:51.189Z" hostname="dadcaeef10d0" tests="8" failures="0" errors="0" skipped="0" time="0.005923166">
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory show &gt; should display a message if memory is empty" time="0.002610541">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory show &gt; should display the memory content and file count if it exists" time="0.000333666">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory add &gt; should return an error message if no arguments are provided" time="0.000323333">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory add &gt; should return a tool action and add an info message when arguments are provided" time="0.000259292">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display success message when memory is refreshed with content" time="0.000368458">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display success message when memory is refreshed with no content" time="0.000213042">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display an error message if refreshing fails" time="0.000460333">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should not throw if config service is unavailable" time="0.00058275">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/privacyCommand.test.ts" timestamp="2025-08-13T01:39:51.191Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.002656333">
        <testcase classname="src/ui/commands/privacyCommand.test.ts" name="privacyCommand &gt; should return a dialog action to open the privacy dialog" time="0.001722916">
        </testcase>
        <testcase classname="src/ui/commands/privacyCommand.test.ts" name="privacyCommand &gt; should have the correct name and description" time="0.000242542">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/quitCommand.test.ts" timestamp="2025-08-13T01:39:51.191Z" hostname="dadcaeef10d0" tests="1" failures="0" errors="0" skipped="0" time="0.003990209">
        <testcase classname="src/ui/commands/quitCommand.test.ts" name="quitCommand &gt; returns a QuitActionReturn object with the correct messages" time="0.003287833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/statsCommand.test.ts" timestamp="2025-08-13T01:39:51.192Z" hostname="dadcaeef10d0" tests="3" failures="0" errors="0" skipped="0" time="0.00509725">
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display general session stats when run with no subcommand" time="0.003838792">
        </testcase>
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display model stats when using the &quot;model&quot; subcommand" time="0.000312208">
        </testcase>
        <testcase classname="src/ui/commands/statsCommand.test.ts" name="statsCommand &gt; should display tool stats when using the &quot;tools&quot; subcommand" time="0.00022275">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/synapticCommand.test.ts" timestamp="2025-08-13T01:39:51.193Z" hostname="dadcaeef10d0" tests="17" failures="17" errors="0" skipped="0" time="0.020358667">
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 引数なしでダッシュボードを表示すること" time="0.010758625">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:45:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; helpコマンドでヘルプメッセージを表示すること" time="0.000340833">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:57:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; --helpフラグでヘルプメッセージを表示すること" time="0.000205375">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:66:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; -hフラグでヘルプメッセージを表示すること" time="0.000159625">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:73:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; statusコマンドでシステム状態を表示すること" time="0.000388042">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:109:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; searchコマンドでメモリ検索を実行すること" time="0.000241792">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:143:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索クエリなしでsearchコマンドを実行した場合エラーになること" time="0.000185666">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:153:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; activateコマンドでメモリ活性化を実行すること" time="0.00022725">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:179:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; メモリIDなしでactivateコマンドを実行した場合エラーになること" time="0.000144292">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:188:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 存在しないサブコマンドでエラーになること" time="0.000152125">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:195:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; ダッシュボード表示エラーをハンドリングすること" time="0.000166791">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:204:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; status取得エラーをハンドリングすること" time="0.000250208">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:221:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索エラーをハンドリングすること" time="0.000213166">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:236:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 活性化エラーをハンドリングすること" time="0.000201208">
            <failure message="expected undefined to be false // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be false // Object.is equality

- Expected: 
false

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:253:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 検索結果が空の場合の処理" time="0.000187875">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:268:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 活性化結果が空の場合の処理" time="0.000191166">
            <failure message="expected undefined to be true // Object.is equality" type="AssertionError">
AssertionError: expected undefined to be true // Object.is equality

- Expected: 
true

+ Received: 
undefined

 ❯ src/ui/commands/synapticCommand.test.ts:285:28
            </failure>
        </testcase>
        <testcase classname="src/ui/commands/synapticCommand.test.ts" name="synapticCommand &gt; 複雑な検索クエリを正しく解析すること" time="0.005538625">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ &apos;複雑な検索クエリ&apos;, 10 ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ &apos;複雑な検索クエリ&apos;, 10 ]

Number of calls: 0

 ❯ src/ui/commands/synapticCommand.test.ts:301:34
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/themeCommand.test.ts" timestamp="2025-08-13T01:39:51.203Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.002676667">
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should return a dialog action to open the theme dialog" time="0.001741833">
        </testcase>
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should have the correct name and description" time="0.000234">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/toolsCommand.test.ts" timestamp="2025-08-13T01:39:51.203Z" hostname="dadcaeef10d0" tests="4" failures="0" errors="0" skipped="0" time="0.00499775">
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should display an error if the tool registry is unavailable" time="0.0030765">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should display &quot;No tools available&quot; when none are found" time="0.000663917">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should list tools without descriptions by default" time="0.000364875">
        </testcase>
        <testcase classname="src/ui/commands/toolsCommand.test.ts" name="toolsCommand &gt; should list tools with descriptions when &quot;desc&quot; arg is passed" time="0.000182083">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AuthDialog.test.tsx" timestamp="2025-08-13T01:39:51.204Z" hostname="dadcaeef10d0" tests="10" failures="0" errors="0" skipped="0" time="0.375076125">
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should show an error if the initial auth type is invalid" time="0.020440333">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_API_KEY environment variable &gt; should detect AGENTS_API_KEY environment variable" time="0.008271334">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_API_KEY environment variable &gt; should not show the AGENTS_API_KEY message if AGENTS_DEFAULT_AUTH_TYPE is set to something else" time="0.004118625">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_API_KEY environment variable &gt; should show the AGENTS_API_KEY message if AGENTS_DEFAULT_AUTH_TYPE is set to use api key" time="0.003995">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_DEFAULT_AUTH_TYPE environment variable &gt; should select the auth type specified by AGENTS_DEFAULT_AUTH_TYPE" time="0.003214417">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_DEFAULT_AUTH_TYPE environment variable &gt; should fall back to default if AGENTS_DEFAULT_AUTH_TYPE is not set" time="0.005703125">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; AGENTS_DEFAULT_AUTH_TYPE environment variable &gt; should show an error and fall back to default if AGENTS_DEFAULT_AUTH_TYPE is invalid" time="0.005757584">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should prevent exiting when no auth method is selected and show error message" time="0.10880225">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should not exit if there is already an error message" time="0.107090709">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should allow exiting when auth method is already selected" time="0.106750542">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/HistoryItemDisplay.test.tsx" timestamp="2025-08-13T01:39:51.207Z" hostname="dadcaeef10d0" tests="6" failures="0" errors="0" skipped="0" time="0.055961417">
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders UserMessage for &quot;user&quot; type" time="0.021697958">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders StatsDisplay for &quot;stats&quot; type" time="0.005166084">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders AboutBox for &quot;about&quot; type" time="0.004339125">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders ModelStatsDisplay for &quot;model_stats&quot; type" time="0.001735708">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders ToolStatsDisplay for &quot;tool_stats&quot; type" time="0.001493792">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders SessionSummaryDisplay for &quot;quit&quot; type" time="0.020664458">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/InputPrompt.test.tsx" timestamp="2025-08-13T01:39:51.208Z" hostname="dadcaeef10d0" tests="22" failures="0" errors="0" skipped="0" time="2.435624293">
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.getPreviousCommand on up arrow in shell mode" time="0.119423209">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.getNextCommand on down arrow in shell mode" time="0.104806458">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should set the buffer text when a shell history command is retrieved" time="0.105660708">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.addCommandToHistory on submit in shell mode" time="0.105426792">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should NOT call shell history methods when not in shell mode" time="0.206781084">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle Ctrl+V when clipboard has an image" time="0.104899167">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should not insert anything when clipboard has no image" time="0.104711917">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle image save failure gracefully" time="0.104366208">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should insert image path at cursor position with proper spacing" time="0.104784041">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle errors during clipboard operations" time="0.106619875">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a partial parent command and add a space" time="0.10526425">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should append a sub-command when the parent command is already complete with a space" time="0.105809625">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should handle the &quot;backspace&quot; edge case correctly" time="0.105039166">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a partial argument for a command" time="0.105926542">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should autocomplete on Enter when suggestions are active, without submitting" time="0.105974959">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a command based on its altName" time="0.104981584">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should not submit on Enter when the buffer is empty or only contains whitespace" time="0.104759167">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should submit directly on Enter when a complete leaf command is typed" time="0.106668791">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should autocomplete an @-path on Enter without submitting" time="0.106646459">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should add a newline on enter when the line ends with a backslash" time="0.105540875">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should clear the buffer on Ctrl+C if it has text" time="0.105274292">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should NOT clear the buffer on Ctrl+C if it is empty" time="0.1047835">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/LoadingIndicator.test.tsx" timestamp="2025-08-13T01:39:51.213Z" hostname="dadcaeef10d0" tests="11" failures="0" errors="0" skipped="0" time="0.028014125">
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should not render when streamingState is Idle" time="0.008812542">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner, phrase, and time when streamingState is Responding" time="0.005332">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner (static), phrase but no time/cancel when streamingState is WaitingForConfirmation" time="0.0019065">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the currentLoadingPhrase correctly" time="0.001056083">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly when Responding" time="0.001079166">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly in human-readable format" time="0.001008625">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render rightContent when provided" time="0.000994958">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should transition correctly between states using rerender" time="0.003220917">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display fallback phrase if thought is empty" time="0.000975208">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the subject of a thought" time="0.001504417">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should prioritize thought.subject over currentLoadingPhrase" time="0.001292125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ModelStatsDisplay.test.tsx" timestamp="2025-08-13T01:39:51.215Z" hostname="dadcaeef10d0" tests="6" failures="0" errors="0" skipped="0" time="0.052358458">
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should render &quot;no API calls&quot; message when there are no active models" time="0.01430575">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should not display conditional rows if no model has data for them" time="0.009906125">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display conditional rows if at least one model has data" time="0.007443583">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display stats for multiple models correctly" time="0.007627625">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should handle large values without wrapping or overlapping" time="0.007123125">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display a single model correctly" time="0.00502825">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/SessionSummaryDisplay.test.tsx" timestamp="2025-08-13T01:39:51.217Z" hostname="dadcaeef10d0" tests="1" failures="0" errors="0" skipped="0" time="0.075194625">
        <testcase classname="src/ui/components/SessionSummaryDisplay.test.tsx" name="&lt;SessionSummaryDisplay /&gt; &gt; renders the summary display with a title" time="0.073541917">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/StatsDisplay.test.tsx" timestamp="2025-08-13T01:39:51.217Z" hostname="dadcaeef10d0" tests="10" failures="0" errors="0" skipped="0" time="0.088685416">
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders only the Performance section in its zero state" time="0.017240416">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders a table with two models correctly" time="0.009944125">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders all sections when all data is present" time="0.008420083">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Rendering Tests &gt; hides User Agreement when no decisions are made" time="0.0057955">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Rendering Tests &gt; hides Efficiency section when cache is not used" time="0.004041875">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in green for high values" time="0.003737167">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in yellow for medium values" time="0.003267166">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in red for low values" time="0.0034015">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Title Rendering &gt; renders the default title when no title prop is provided" time="0.004161792">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Title Rendering &gt; renders the custom title when a title prop is provided" time="0.027780833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/SynapticMemoryDashboard.test.tsx" timestamp="2025-08-13T01:39:51.220Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/SynapticMemoryDashboard.test.tsx" name="src/ui/components/SynapticMemoryDashboard.test.tsx" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ToolStatsDisplay.test.tsx" timestamp="2025-08-13T01:39:51.221Z" hostname="dadcaeef10d0" tests="5" failures="0" errors="0" skipped="0" time="0.046957041">
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should render &quot;no tool calls&quot; message when there are no active tools" time="0.015517458">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should display stats for a single tool correctly" time="0.008315584">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should display stats for multiple tools correctly" time="0.007076833">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should handle large values without wrapping or overlapping" time="0.007291125">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should handle zero decisions gracefully" time="0.007937708">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/atCommandProcessor.test.ts" timestamp="2025-08-13T01:39:51.222Z" hostname="dadcaeef10d0" tests="17" failures="0" errors="0" skipped="0" time="0.0138275">
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should pass through query if no @ command is present" time="0.002928541">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should pass through original query if only a lone @ symbol is present" time="0.000422416">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid text file path" time="0.001757875">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid directory path and convert to glob" time="0.00065475">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid image file path (as text content for now)" time="0.000302375">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle query with text before and after @command" time="0.00031675">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should correctly unescape paths with escaped spaces" time="0.00042175">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle multiple @file references" time="0.000533">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle multiple @file references with interleaved text" time="0.000493083">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle a mix of valid, invalid, and lone @ references" time="0.000904542">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should return original query if all @paths are invalid or lone @" time="0.000526833">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a file path case-insensitively" time="0.00089725">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should skip git-ignored files in @ commands" time="0.000496">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should process non-git-ignored files normally" time="0.000816541">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should handle mixed git-ignored and valid files" time="0.000741">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should always ignore .git directory files" time="0.000349541">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; when recursive file search is disabled &gt; should not use glob search for a nonexistent file" time="0.000357959">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/shellCommandProcessor.test.ts" timestamp="2025-08-13T01:39:51.226Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="src/ui/hooks/shellCommandProcessor.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/slashCommandProcessor.test.ts" timestamp="2025-08-13T01:39:51.226Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="src/ui/hooks/slashCommandProcessor.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useAutoAcceptIndicator.test.ts" timestamp="2025-08-13T01:39:51.227Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="src/ui/hooks/useAutoAcceptIndicator.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.integration.test.ts" timestamp="2025-08-13T01:39:51.228Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="src/ui/hooks/useCompletion.integration.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.test.ts" timestamp="2025-08-13T01:39:51.229Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="src/ui/hooks/useCompletion.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useConsoleMessages.test.ts" timestamp="2025-08-13T01:39:51.230Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="src/ui/hooks/useConsoleMessages.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useEditorSettings.test.ts" timestamp="2025-08-13T01:39:51.231Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="src/ui/hooks/useEditorSettings.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGeminiStream.test.tsx" timestamp="2025-08-13T01:39:51.232Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="src/ui/hooks/useGeminiStream.test.tsx" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGitBranchName.test.ts" timestamp="2025-08-13T01:39:51.232Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="src/ui/hooks/useGitBranchName.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useHistoryManager.test.ts" timestamp="2025-08-13T01:39:51.233Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="src/ui/hooks/useHistoryManager.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useInputHistory.test.ts" timestamp="2025-08-13T01:39:51.234Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="src/ui/hooks/useInputHistory.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useKeypress.test.ts" timestamp="2025-08-13T01:39:51.235Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="src/ui/hooks/useKeypress.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useLoadingIndicator.test.ts" timestamp="2025-08-13T01:39:51.236Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="src/ui/hooks/useLoadingIndicator.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/usePhraseCycler.test.ts" timestamp="2025-08-13T01:39:51.237Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="src/ui/hooks/usePhraseCycler.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useShellHistory.test.ts" timestamp="2025-08-13T01:39:51.237Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="src/ui/hooks/useShellHistory.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useSynapticMemory.test.ts" timestamp="2025-08-13T01:39:51.238Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useSynapticMemory.test.ts" name="src/ui/hooks/useSynapticMemory.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useTimer.test.ts" timestamp="2025-08-13T01:39:51.239Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="src/ui/hooks/useTimer.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useToolScheduler.test.ts" timestamp="2025-08-13T01:39:51.240Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="src/ui/hooks/useToolScheduler.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/MarkdownDisplay.test.tsx" timestamp="2025-08-13T01:39:51.241Z" hostname="dadcaeef10d0" tests="14" failures="0" errors="0" skipped="0" time="0.139377333">
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nothing for empty text" time="0.008957708">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a simple paragraph" time="0.004303291">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders headers with correct levels" time="0.002343084">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block with a language" time="0.01015275">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block without a language" time="0.081424292">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles unclosed (pending) code blocks" time="0.002251333">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders unordered lists with different markers" time="0.001832292">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nested unordered lists" time="0.00153725">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders ordered lists" time="0.001571041">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders horizontal rules" time="0.001408458">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders tables correctly" time="0.004621958">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles a table at the end of the input" time="0.001590083">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; inserts a single space between paragraphs" time="0.000960292">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; correctly parses a mix of markdown elements" time="0.015485416">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/clipboardUtils.test.ts" timestamp="2025-08-13T01:39:51.244Z" hostname="dadcaeef10d0" tests="6" failures="0" errors="0" skipped="0" time="0.002883125">
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return false on non-macOS platforms" time="0.000781667">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return boolean on macOS" time="0.000077791">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should return null on non-macOS platforms" time="0.000123125">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should handle errors gracefully" time="0.000053541">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should not throw errors" time="0.000733166">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should complete without errors on valid directory" time="0.00029475">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/computeStats.test.ts" timestamp="2025-08-13T01:39:51.245Z" hostname="dadcaeef10d0" tests="11" failures="0" errors="0" skipped="0" time="0.002819666">
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should return 0 if totalRequests is 0" time="0.000788959">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should calculate the error rate correctly" time="0.000082917">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should return 0 if totalRequests is 0" time="0.000073875">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should calculate the average latency correctly" time="0.000049833">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should return 0 if prompt tokens is 0" time="0.000055958">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should calculate the cache hit rate correctly" time="0.000046042">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should return all zeros for initial empty metrics" time="0.000504542">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate API and tool time percentages" time="0.000139459">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate cache efficiency" time="0.000093458">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate success and agreement rates" time="0.000067125">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should handle division by zero gracefully" time="0.000093042">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/displayUtils.test.ts" timestamp="2025-08-13T01:39:51.248Z" hostname="dadcaeef10d0" tests="5" failures="0" errors="0" skipped="0" time="0.001794583">
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return green for values &gt;= green threshold" time="0.000759042">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return yellow for values &lt; green and &gt;= yellow threshold" time="0.000104875">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return red for values &lt; yellow threshold" time="0.000068666">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return defaultColor for values &lt; yellow threshold when provided" time="0.000054125">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; Threshold Constants &gt; should have the correct values" time="0.000133292">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/errorParsing.test.ts" timestamp="2025-08-13T01:39:51.249Z" hostname="dadcaeef10d0" tests="21" failures="0" errors="0" skipped="0" time="0.00349925">
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a valid API error JSON" time="0.0008385">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the default message" time="0.000241666">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the personal message" time="0.00014925">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the vertex message" time="0.000068792">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should return the original message if it is not a JSON error" time="0.000038917">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should return the original message for malformed JSON" time="0.000041625">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle JSON that does not match the ApiError structure" time="0.0000475">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a nested API error" time="0.000077875">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a StructuredError" time="0.000046666">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 StructuredError with the vertex message" time="0.000053334">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle an unknown error type" time="0.000035958">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Free tier)" time="0.000091417">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a regular 429 API error with standard message for Google auth" time="0.000102791">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with generic quota exceeded message for Google auth" time="0.000088459">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should prioritize Pro quota message over generic quota message for Google auth" time="0.00013325">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Standard tier)" time="0.000112375">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Legacy tier)" time="0.000091">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle different Gemini 2.5 version strings in Pro quota exceeded errors" time="0.000099958">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should not match non-Pro models with similar version strings" time="0.000103542">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a generic quota exceeded message for Google auth (Standard tier)" time="0.000101833">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a regular 429 API error with standard message for Google auth (Standard tier)" time="0.00011625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/formatters.test.ts" timestamp="2025-08-13T01:39:51.254Z" hostname="dadcaeef10d0" tests="14" failures="0" errors="0" skipped="0" time="0.002079042">
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into KB" time="0.000746833">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into MB" time="0.000077125">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into GB" time="0.000053334">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format milliseconds less than a second" time="0.000076209">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration of 0" time="0.000036792">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of seconds" time="0.000036042">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in seconds with one decimal place" time="0.000035584">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of minutes" time="0.000039542">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in minutes and seconds" time="0.000034667">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of hours" time="0.000033917">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours and seconds" time="0.000032958">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours, minutes, and seconds" time="0.000033583">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle large durations" time="0.0000335">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle negative durations" time="0.000033292">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/markdownUtilities.test.ts" timestamp="2025-08-13T01:39:51.257Z" hostname="dadcaeef10d0" tests="7" failures="0" errors="0" skipped="0" time="0.001740959">
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should split at the last double newline if not in a code block" time="0.000749041">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if no safe split point is found" time="0.000087584">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should prioritize splitting at 

 over being at the very end of the string if the end is not in a code block" time="0.000047875">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if the only 

 is inside a code block and the end of content is not" time="0.000046541">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should correctly identify the last 

 even if it is followed by text not in a code block" time="0.000039583">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content is empty" time="0.000039916">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content has no newlines and no code blocks" time="0.000038959">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/textUtils.test.ts" timestamp="2025-08-13T01:39:51.259Z" hostname="dadcaeef10d0" tests="5" failures="0" errors="0" skipped="0" time="0.001929417">
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return true for a buffer containing a null byte" time="0.000837375">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a buffer containing only text" time="0.00008175">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for an empty buffer" time="0.000055041">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a null or undefined buffer" time="0.00006375">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should only check the sample size" time="0.000207417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/updateCheck.test.ts" timestamp="2025-08-13T01:39:51.260Z" hostname="dadcaeef10d0" tests="6" failures="1" errors="0" skipped="0" time="0.009864459">
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if package.json is missing" time="0.000825375">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if there is no update" time="0.000093209">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return a message if a newer version is available" time="0.007999667">
            <failure message="the given combination of arguments (null and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string" type="AssertionError">
AssertionError: the given combination of arguments (null and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
 ❯ src/ui/utils/updateCheck.test.ts:50:20
            </failure>
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is the same as the current version" time="0.000153542">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is older than the current version" time="0.000059416">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should handle errors gracefully" time="0.000068875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/DiffRenderer.test.tsx" timestamp="2025-08-13T01:39:51.262Z" hostname="dadcaeef10d0" tests="13" failures="0" errors="0" skipped="0" time="0.164114416">
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with correct language for new file with known extension" time="0.020893125">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file with unknown extension" time="0.084535375">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file if no filename is provided" time="0.014676333">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render diff content for existing file (not calling colorizeCode directly for the whole block)" time="0.003138959">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle diff with only header and no changes" time="0.001997541">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle empty diff content" time="0.000733167">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render a gap indicator for skipped lines" time="0.005514292">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should not render a gap indicator for small gaps (&lt;= MAX_CONTEXT_LINES_WITHOUT_GAP)" time="0.006776375">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height undefined" time="0.009257041">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height 6" time="0.003653584">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 30 and height 6" time="0.003192542">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with a SVN diff format" time="0.003018959">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a new file with no file extension correctly" time="0.005738417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolConfirmationMessage.test.tsx" timestamp="2025-08-13T01:39:51.265Z" hostname="dadcaeef10d0" tests="2" failures="0" errors="0" skipped="0" time="0.024302208">
        <testcase classname="src/ui/components/messages/ToolConfirmationMessage.test.tsx" name="ToolConfirmationMessage &gt; should not display urls if prompt and url are the same" time="0.018372875">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolConfirmationMessage.test.tsx" name="ToolConfirmationMessage &gt; should display urls if prompt and url are different" time="0.005108292">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolMessage.test.tsx" timestamp="2025-08-13T01:39:51.265Z" hostname="dadcaeef10d0" tests="11" failures="0" errors="0" skipped="0" time="0.033592625">
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders basic tool information" time="0.01590575">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ✔ for Success status" time="0.001420167">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows o for Pending status" time="0.001407041">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ? for Confirming status" time="0.001713">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows - for Canceled status" time="0.001236084">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows x for Error status" time="0.001216125">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is Idle" time="0.001949042">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is WaitingForConfirmation" time="0.001244583">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows MockRespondingSpinner for Executing status when streamingState is Responding" time="0.001467833">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders DiffRenderer for diff results" time="0.002024959">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders emphasis correctly" time="0.003104833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/MaxSizedBox.test.tsx" timestamp="2025-08-13T01:39:51.268Z" hostname="dadcaeef10d0" tests="21" failures="0" errors="0" skipped="0" time="0.051235084">
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders children without truncation when they fit" time="0.013911667">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines when content exceeds maxHeight" time="0.001765167">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines at the end when content exceeds maxHeight and overflowDirection is bottom" time="0.001047041">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text that exceeds maxWidth" time="0.0014665">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles mixed wrapping and non-wrapping segments" time="0.006809916">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles words longer than maxWidth by splitting them" time="0.003256709">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; does not truncate when maxHeight is undefined" time="0.001141458">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden" time="0.002761959">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden and overflowDirection is bottom" time="0.001068917">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders an empty box for empty children" time="0.000347875">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte unicode characters correctly" time="0.000971958">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte emoji characters correctly" time="0.001199292">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; falls back to an ellipsis when width is extremely small" time="0.00107">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates long non-wrapping text with ellipsis" time="0.000881083">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates non-wrapping text containing line breaks" time="0.001021375">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; truncates emoji characters correctly with ellipsis" time="0.000641417">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows ellipsis for multiple rows with long non-wrapping text" time="0.001253542">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; accounts for additionalHiddenLinesCount" time="0.000901209">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles React.Fragment as a child" time="0.001174834">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the top" time="0.002590459">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the bottom" time="0.005074625">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/text-buffer.test.ts" timestamp="2025-08-13T01:39:51.273Z" hostname="dadcaeef10d0" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="src/ui/components/shared/text-buffer.test.ts" time="0">
            <failure message="Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js" type="Error">
Error: Cannot find module &apos;@testing-library/dom&apos;
Require stack:
- /agents/packages/cli/node_modules/@testing-library/react/dist/pure.js
 ❯ Object.&lt;anonymous&gt; node_modules/@testing-library/react/dist/pure.js:46:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;MODULE_NOT_FOUND&apos;, requireStack: [ &apos;/agents/packages/cli/node_modules/@testing-library/react/dist/pure.js&apos; ] }
            </failure>
        </testcase>
    </testsuite>
</testsuites>
