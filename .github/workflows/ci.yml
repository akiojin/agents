name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 基本テストとビルド
  test:
    runs-on: self-hosted
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run linter
        run: bun run lint
      
      - name: Run type check
        run: bun run typecheck
      
      - name: Run unit tests
        run: bun test --reporter=verbose
        env:
          NODE_ENV: test
      
      - name: Build project
        run: bun run build

  # Synaptic Memory システム統合テスト
  synaptic-integration:
    runs-on: self-hosted
    needs: test
    
    services:
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd="curl -f http://localhost:8000/api/v1/heartbeat"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Wait for ChromaDB
        run: |
          timeout 60s sh -c 'until curl -f http://localhost:8000/api/v1/heartbeat; do sleep 2; done'
      
      - name: Run Synaptic Memory API tests
        run: bun test packages/memory/src/api/memoryApi.test.ts --reporter=verbose
        env:
          NODE_ENV: test
          CHROMA_URL: http://localhost:8000
      
      - name: Run Synaptic Network integration tests
        run: bun test packages/memory/src/synaptic/synapticNetwork.integration.test.ts --reporter=verbose
        env:
          NODE_ENV: test
          CHROMA_URL: http://localhost:8000
      
      - name: Run Frontend Components tests
        run: |
          bun test packages/cli/src/ui/components/SynapticMemoryDashboard.test.tsx --reporter=verbose
          bun test packages/cli/src/ui/hooks/useSynapticMemory.test.ts --reporter=verbose
          bun test packages/cli/src/ui/commands/synapticCommand.test.ts --reporter=verbose
        env:
          NODE_ENV: test

  # パフォーマンステスト（PR時のみ実行）
  performance:
    runs-on: self-hosted
    needs: synaptic-integration
    if: github.event_name == 'pull_request'
    
    services:
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd="curl -f http://localhost:8000/api/v1/heartbeat"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Wait for ChromaDB
        run: |
          timeout 60s sh -c 'until curl -f http://localhost:8000/api/v1/heartbeat; do sleep 2; done'
      
      - name: Run performance tests
        run: bun test test/performance/synaptic-memory.performance.test.ts --reporter=verbose --timeout=300000
        env:
          NODE_ENV: test
          CHROMA_URL: http://localhost:8000
      
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            test-results/
            *.log

  # エラーハンドリングテスト
  error-handling:
    runs-on: self-hosted
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run error handling tests
        run: bun test test/error-handling/synaptic-memory.error.test.ts --reporter=verbose
        env:
          NODE_ENV: test

  # E2Eテスト（main/developブランチのみ）
  e2e:
    runs-on: self-hosted
    needs: [synaptic-integration, error-handling]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    services:
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd="curl -f http://localhost:8000/api/v1/heartbeat"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Build project
        run: bun run build
      
      - name: Wait for ChromaDB
        run: |
          timeout 60s sh -c 'until curl -f http://localhost:8000/api/v1/heartbeat; do sleep 2; done'
      
      - name: Run E2E tests
        run: bun test test/e2e/synaptic-memory.e2e.test.ts --reporter=verbose --timeout=600000
        env:
          NODE_ENV: test
          CHROMA_URL: http://localhost:8000
      
      - name: Upload E2E artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-artifacts
          path: |
            test-results/
            screenshots/
            *.log

  # テストカバレッジ計測
  coverage:
    runs-on: self-hosted
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run tests with coverage
        run: bun test --coverage --reporter=verbose
        env:
          NODE_ENV: test
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

